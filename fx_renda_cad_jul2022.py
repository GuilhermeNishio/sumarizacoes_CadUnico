# -*- coding: utf-8 -*-
"""fx_renda_cad_Jul2022.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o4ld6kt9o9_G4KQc9RVeDfG08RUXvleS

Importando bibliotecas
"""

import pandas as pd
import numpy as np

"""Conectando Drive para leitura dos arquivos"""

from google.colab import drive
drive.mount('/content/drive')

"""Lendo cada arquivo"""

df1 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_0_5_anos_jul22.csv', sep = ",")
df2 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_6_11_anos_jul22.csv', sep = ",")
df3 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_12_14_anos_jul22.csv', sep = ",")
df4 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_15_17_anos_jul22.csv', sep = ",")
df5 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_18_25_anos_jul22.csv', sep = ",")
df6 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_26_29_anos_jul22.csv', sep = ",")
df7 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_30_40_anos_jul22.csv', sep = ",")
df8 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_41_55_anos_jul22.csv', sep = ",")
df9 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_56_59_anos_jul22.csv', sep = ",")
df10 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_60_64_anos_jul22.csv', sep = ",")
df11 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Geo_Faixa_Etaria_65_anos_mais_jul22.csv', sep = ",")

"""Juntando arquivos num único dataframe"""

frames = [df1, df2, df3,df4, df5, df6,df7, df8, df9, df10, df11]
df = pd.concat(frames)
df.head()

"""Segmentação das faixas etárias"""

labels = ['0 a 1', '2 a 3', '4 a 6', '6 a 11', '12 a 14', '15 a 17', '18 a 25', '26 a 29', '30 a 40', '41 a 55', '56 a 59', '60 a 64', '65 ou mais']
bins = [-float('inf'), 1,3,6,11,14,17,25,29,40,55,59,64, float('inf')]
df['faixa_etária'] = pd.cut(df['IDADE'], bins = bins, labels = labels)
df.head(15)

"""Inserindo dados de faixa de renda no df com um join com outra tabela de faixa de renda por família

"""

# Criando df_fam com tabela de faixa de renda das famílias

df_fam1 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Famílias/GEO_JULHO_pt1_822300_FINAL.csv', sep = ";")
df_fam2 = pd.read_csv('/content/drive/MyDrive/Cad/jul22/Famílias/GEO_JULHO_pt2_820238_FINAL.csv', sep = ";")
df_fam = pd.concat([df_fam1, df_fam2])
df_fam    


# Join das tabelas para inserir coluna de faixa de renda no df principal
df = df.merge(df_fam[['COD_FAMILIAR_FAM','FAIXA DE RENDA','VALOR_PAB', 'VLR_RENDA_MEDIA_FAM']], on = 'COD_FAMILIAR_FAM')

"""Agregando contagem por distritos"""

display(df)

# Mulheres por raça e faixa de renda

raça_fx_renda = pd.pivot_table(data = df, values = ['NUM_MEMBRO_FMLA'], columns = ['COD_RACA_COR_PESSOA', 'FAIXA DE RENDA'], index = ['DISTRITO'], aggfunc= 'count')
fem_raça_fx_renda = pd.pivot_table(data = df[df.COD_SEXO_PESSOA == 2], values = ['NUM_MEMBRO_FMLA'], columns = ['COD_RACA_COR_PESSOA', 'FAIXA DE RENDA'], index = ['DISTRITO'], aggfunc= 'count')
masc_raça_fx_renda = pd.pivot_table(data = df[df.COD_SEXO_PESSOA == 1], values = ['NUM_MEMBRO_FMLA'], columns = ['COD_RACA_COR_PESSOA', 'FAIXA DE RENDA'], index = ['DISTRITO'], aggfunc= 'count')
display(raça_fx_renda)

fx_etaria_raça = pd.pivot_table(data = df, values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['COD_RACA_COR_PESSOA','faixa_etária'], aggfunc= 'count')
fx_etaria_raça_m = df[df.COD_SEXO_PESSOA==1].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['COD_RACA_COR_PESSOA','faixa_etária'], aggfunc= 'count')
fx_etaria_raça_f = df[df.COD_SEXO_PESSOA==2].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['COD_RACA_COR_PESSOA','faixa_etária'], aggfunc= 'count')

fx_etaria_raça_m

"""Tabelas por sexo

"""

fx_etaria_masc = df[df.COD_SEXO_PESSOA==1].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['faixa_etária'], aggfunc= 'count')
fx_etaria_masc

fx_etaria_fem = df[df.COD_SEXO_PESSOA==2].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['faixa_etária',], aggfunc= 'count')

fx_etaria_fem

idades = df.pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['IDADE'], aggfunc= 'count')
idades_m = df[df.COD_SEXO_PESSOA==1].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['IDADE'], aggfunc= 'count')
idades_f = df[df.COD_SEXO_PESSOA==2].pivot_table(values = ['NUM_MEMBRO_FMLA'], index = ['DISTRITO'], columns = ['IDADE'], aggfunc= 'count')
idades_m.loc['Total']= idades_m.sum()
idades_m['Total']= idades_m.sum(axis=1)
idades_f.loc['Total']= idades_f.sum()
idades_f['Total']= idades_f.sum(axis=1)
idades.loc['Total']= idades.sum()
idades['Total']= idades.sum(axis=1)

display(idades_m)

"""Transformar em um arquivo excel"""

with pd.ExcelWriter("quantitativos-cadJul2022.xlsx") as writer:
  fx_etaria_raça.to_excel(writer, sheet_name="Geral por Raça")
  fx_etaria_raça_m.to_excel(writer, sheet_name="Raça - Masc")
  fx_etaria_raça_f.to_excel(writer, sheet_name="Raça - Fem")
  fx_etaria_masc.to_excel(writer, sheet_name="Etária Masculino")
  fx_etaria_fem.to_excel(writer, sheet_name="Etária femininino")

"""Quantitativo de Idades e Sexo

"""

with pd.ExcelWriter("quantitativo_idades_cadJul2022.xlsx") as writer:
  idades.to_excel(writer, sheet_name="Idades Geral")
  idades_m.to_excel(writer, sheet_name="Idades Masculino")
  idades_f.to_excel(writer, sheet_name="Idades Feminino")

"""Quantitativo Faixa de Renda e Sexo"""

with pd.ExcelWriter("quantitativo_fx-renda_sexo_cadJul2022.xlsx") as writer:
  raça_fx_renda.to_excel(writer, sheet_name="Renda e Raça")
  fem_raça_fx_renda.to_excel(writer, sheet_name="Mulheres Renda e Raça")
  masc_raça_fx_renda.to_excel(writer, sheet_name="Homens Renda e Raça")

